server:
  port: 8884
spring:
  application:
    name: user-provider
  datasource:
    hikari:
      driver-class-name: com.mysql.jdbc.Driver
      jdbc-url: jdbc:mysql://127.0.0.1:3306/xc_user
      username: root
      password: root
      minimum-idle: 5
      maximum-pool-size: 20
      max-lifetime: 60000
      idle-timeout: 10000
      connection-timeout: 1200
#      data-source-class-name: com.zaxxer.hikari.HikariDataSource


#  boot:
#    admin:
#      client:
#        url: http://127.0.0.1:9090
eureka:
  client:
    serviceUrl: # eureka server的路径
      defaultZone: http://localhost:8886/eureka/, #把 eureka 集群中的所有 url 都填写了进来，也 可以只写一台，因为各个 eureka server 可以同步注册表
    prefer-ip-address: true #自定义实例显示格式，加上版本号，便于多版本管理，注意是ip-address
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}
    healthcheck:
      enabled: true
datasource:
  type: com.alibaba.druid.pool.DruidDataSource
  url: jdbc:mysql://127.0.0.1:3306/xc_user
  username: root
  password: root
  driver-class-name: com.mysql.jdbc.Driver
  minIdle: 5
  maxActive: 20 # 推荐配置：20，多数场景下 20 已完全够用
  initialSize: 1
  #单位都是毫秒;connectTimeout 配置建立 TCP 连接的超时时间，socketTimeout 配置发送请求后等待响应的超时时间
  socketTimeout: 3000
  connectTimeout: 1200
  keepAlive: true #是否对空闲连接保活
  timeBetweenEvictionRunsMillis: 3000 #单位毫秒检测连接的间隔时间，会在检测过程中触发心跳
  minEvictableIdleTimeMillis: 300000
  validationQuery: SELECT 'ZTM' FROM DUAL
  testWhileIdle: true
  testOnBorrow: false
  testOnReturn: false
  removeAbandoned: true
  removeAbandonedTimeout: 180 #如果一个连接持有 180 秒还没有归还，就被认为是异常连接，需要关闭掉这条连接
  maxWait: 60000 #从连接池获取连接的超时等待时间；推荐配置: 内网(网络状况好) 800；网络状况不是特别好的情况下推荐大于等于 1200，因为tcp 建连重试一般是 1 秒
mybatis:
  typeAliasesPackage: com.lct.study.bean
  mapperLocations: classpath:mapper/*.xml
#management:
#  server:
#    port: 9999
#  endpoints:
#    web:
#      exposure:
#        include: '*'